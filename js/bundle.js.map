{"version":3,"sources":["webpack://halgorithms/./js/control.js","webpack://halgorithms/./js/main.js","webpack://halgorithms/./js/maze.js","webpack://halgorithms/webpack/bootstrap","webpack://halgorithms/webpack/runtime/define property getters","webpack://halgorithms/webpack/runtime/hasOwnProperty shorthand","webpack://halgorithms/webpack/runtime/make namespace object","webpack://halgorithms/webpack/startup"],"names":["console","log","MAZE","Control","currentFrame","startMaze","event","mainCanvas","document","getElementById","maze","Maze","draw","addEventListener","control","EMPTY","WALL","START","FINISH","GRID_OFFSET","SQUARE_SIDE","SQUARE_PADDING","width","height","canvas","ctx","getContext","row","k","push","grid","slice","mazeBuilderOn","mazeBuilderEvents","fillStyle","fillRect","x","y","drawSquare","squareType","Math","floor","flipTarget","e","inGrid","offsetX","offsetY","pos","convertToGrid","isBuilding","flip"],"mappings":"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","file":"bundle.js","sourcesContent":["import {Maze} from \"./maze\";\n\nconsole.log(\"control.js is running!\");\n\n// Constants for switching\n\nconst MAZE = \"MAZE\";\n\n// Main class used for switching between algorithm pages\n\nexport class Control {\n  constructor() {\n\n    // set initial frame\n    this.currentFrame = MAZE;\n\n    // run initial frame code\n    this.startMaze();\n        \n    // add event tracking for navbar clicks\n  }\n\n  //\n  switchFrame(event) {\n\n  }\n\n  // Start maze frame\n  startMaze() {\n    let mainCanvas = document.getElementById(\"main_canvas\");\n    let maze = new Maze(30, 30, mainCanvas);\n    maze.draw(); \n  }\n}","import {Maze} from \"./maze\";\nimport {Control} from \"./control\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.log(\"Main.jss is running!\")\n\n  let control = new Control();\n  \n  // let mainCanvas = document.getElementById(\"main_canvas\");\n  // let maze = new Maze(30, 30, mainCanvas);\n  // maze.draw();\n});\n","\n\n// meaning of grid values\nconst EMPTY = 0;\nconst WALL = 1;\nconst START = 2;\nconst FINISH = 3;\n\n// edge of canvas, square side, square padding\nconst GRID_OFFSET = 3;\nconst SQUARE_SIDE = 17;\nconst SQUARE_PADDING = 1;\n\nexport class Maze {\n  constructor(width, height, canvas) {\n    this.width = width;\n    this.height = height;\n    this.document = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n\n    // grid initialization\n    let row = [];\n    for (let k = 0; k < width; k++)\n      row.push(WALL);\n    this.grid = [];\n    for (let k = 0; k < height; k++)\n      this.grid.push(row.slice());\n\n    this.grid[0][0] = START;\n    this.grid[this.width-1][this.height-1] = FINISH;\n\n    // maze building initialization\n    this.mazeBuilderOn = true;\n    this.mazeBuilderEvents();\n  }\n\n  // draw entire maze\n  draw() {\n    this.ctx.fillStyle = \"grey\";\n    this.ctx.fillRect(0, 0, GRID_OFFSET * 2 + this.width * SQUARE_SIDE, GRID_OFFSET * 2 + this.height * SQUARE_SIDE);\n    for (let x = 0; x < this.width; x++) {\n      for (let y= 0; y < this.height; y++) {\n        this.drawSquare(x,y);\n      }\n    }\n  }\n\n  // draw individual square\n  drawSquare(x,y) {\n    let squareType = this.grid[x][y];\n    switch (squareType) {\n      case EMPTY:\n        this.ctx.fillStyle = \"white\";\n        break;\n      case WALL:\n        this.ctx.fillStyle = \"black\";\n        break;\n      case START:\n        this.ctx.fillStyle = \"green\";\n        break;\n      case FINISH:\n        this.ctx.fillStyle = \"red\";\n        break;\n\n    }\n    this.ctx.fillRect(GRID_OFFSET + x*SQUARE_SIDE + SQUARE_PADDING, GRID_OFFSET + y*SQUARE_SIDE + SQUARE_PADDING,\n      SQUARE_SIDE - 2*SQUARE_PADDING, SQUARE_SIDE - 2*SQUARE_PADDING );\n  }\n\n  // is mouse in mazeGrid\n  inGrid(x, y) {\n    return (x > GRID_OFFSET) && (y > GRID_OFFSET)\n      && (x < GRID_OFFSET + this.width*SQUARE_SIDE)\n      && (y < GRID_OFFSET + this.height*SQUARE_SIDE);\n  }\n\n  // convert mouse position into grid coordinates\n  convertToGrid(x, y) {\n    return [Math.floor((x-GRID_OFFSET)/SQUARE_SIDE),\n      Math.floor((y-GRID_OFFSET)/SQUARE_SIDE)\n    ];\n  }\n\n  // Flip a square between empty and wall\n\n  flip(x,y) {\n    if (this.grid[x][y] == this.flipTarget) {\n      this.grid[x][y] = this.grid[x][y] == WALL ? EMPTY : WALL\n      this.drawSquare(x,y);        \n    }\n  }\n\n  // Set up events for maze building\n\n  mazeBuilderEvents() {\n    this.document.addEventListener('mousedown', e => {\n      if (this.mazeBuilderOn) {\n        if (this.inGrid(e.offsetX, e.offsetY)) {\n          let pos = this.convertToGrid(e.offsetX, e.offsetY);\n          let [x, y] = pos;\n          if (this.grid[x][y] == EMPTY || this.grid[x][y] == WALL) {\n            this.isBuilding = true;\n            this.flipTarget = this.grid[x][y];\n            this.flip(x,y);  \n          }\n        }\n      }\n    });\n\n\n    this.document.addEventListener('mousemove', e => {\n      if (this.isBuilding) {\n        if (this.inGrid(e.offsetX, e.offsetY)) {\n          let [x, y] = this.convertToGrid(e.offsetX, e.offsetY)\n          this.flip(x, y);\n        }\n      }\n    });\n\n    this.document.addEventListener('mouseup', e => {\n      if (this.isBuilding) {\n        this.isBuilding = false;\n      }\n    });\n  }\n}\n\n// function drawLine(context, x1, y1, x2, y2) {\n//   context.beginPath();\n//   context.strokeStyle = 'red';\n//   context.lineWidth = 1;\n//   context.moveTo(x1, y1);\n//   context.lineTo(x2, y2);\n//   context.stroke();\n//   context.closePath();\n// }\n\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./js/main.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}