{"version":3,"sources":["webpack://halgorithms/./js/main.js","webpack://halgorithms/./js/main_controller.js","webpack://halgorithms/./js/maze.js","webpack://halgorithms/./js/maze_controller.js","webpack://halgorithms/./js/util.js","webpack://halgorithms/webpack/bootstrap","webpack://halgorithms/webpack/runtime/define property getters","webpack://halgorithms/webpack/runtime/hasOwnProperty shorthand","webpack://halgorithms/webpack/runtime/make namespace object","webpack://halgorithms/webpack/startup"],"names":["document","addEventListener","console","log","mainControl","MainController","MAZE_CONTROLLER","currentFrame","startMazeController","newFrame","stopMazeController","mazeController","MazeController","terminate","EMPTY","WALL","START","FINISH","VISITED","GRID_OFFSET","SQUARE_SIDE","SQUARE_PADDING","DIRECTIONS","Maze","width","height","canvas","ctx","getContext","row","k","push","grid","slice","mazeBuilderOn","startMazeBuilderEvents","drawSquare","bind","solveBFS","mouseMove","solveMouse","solveManhattan","rightMove","solveRight","pos","value","fillStyle","fillRect","x","y","squareType","Math","floor","flipTarget","e","inGrid","offsetX","offsetY","convertToGrid","isBuilding","flip","start","getStart","q","Queue","numSquares","enqueque","square","dequeque","setTimeout","d","neighborX","neighborY","length","currentSquare","options","getDirectionOptions","currentDirection","getValue","newDirection","includes","filter","option","random","setValue","acceptableDirection","direction","pos1","pos2","abs","finish","getFinish","PriorityQueue","dist1","manhattan","dist2","add","pop","currentDirectionIndex","right","rightTurn","forwardSquare","rightWallable","leftTurn","CREATE_MAZE_MODE","DEFAULT_MAZE_MODE","SOLVE_MAZE_MODE","SOLVED_MAZE_MODE","createElement","className","createButton","callback","switchMode","startMode","mode","currentMode","stopMode","removeElement","getElementById","parentNode","insertBefore","maze","draw","parentId","element","id","parentElement","newElement","setAttribute","onclick","appendChild","buttonId","buttonText","newButton","text","createTextNode","removeChild","queueStart","queueLength","arr","cb","swim","lastIndex","index","swap","retElement","left","a","b","temp","deepDup","Array","map","ele"],"mappings":"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","file":"bundle.js","sourcesContent":["import {MainController} from \"./main_controller\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.log(\"Main.jss is running!\")\n\n  let mainControl = new MainController();\n\n});\n","import {MazeController} from \"./maze_controller\";\n\n// Constants for switching between algorithm frames\n\nconst MAZE_CONTROLLER = \"MAZE_CONTROLLER\";\n// this.mazeController\n\n\n// Main class used for switching between algorithm frames\n\nexport class MainController {\n  constructor() {\n    // set up control mechanisms for frame switching  \n\n    // set up initial frame and run code\n    this.currentFrame = MAZE_CONTROLLER;\n    this.startMazeController();\n  }\n\n  // switch controllers\n  switchFrame(newFrame) {\n    // shut down current frame\n    switch (this.currentFrame) {\n      case MAZE_CONTROLLER:\n        this.stopMazeController();\n        break;\n    }\n    // start up the new frame\n    switch (newFrame) {\n      case MAZE_CONTROLLER:\n        this.startMazeController();\n        break;\n    }\n    this.currentFrame = newFrame;\n  }\n\n  // Start maze frame\n  startMazeController() {\n    this.mazeController = new MazeController();\n  }\n\n  // shut down this.mazeController\n  stopMazeController() {\n    this.mazeController.terminate();\n    delete this.mazeController;\n  }\n}","import {Queue, PriorityQueue} from './util';\n\n// meaning of grid values\nconst EMPTY = 0;\nconst WALL = 1;\nconst START = 2;\nconst FINISH = 3;\nconst VISITED = 4;\n\n// edge of canvas, square side, square padding\nconst GRID_OFFSET = 3;\nconst SQUARE_SIDE = 17;\nconst SQUARE_PADDING = 1;\n\n// directions used in several algorithms\nconst DIRECTIONS = [[1, 0], [0, 1], [-1, 0], [0, -1]];\n\nexport class Maze {\n  constructor(width, height, canvas) {\n    // set up stuff with main canvas panel\n    this.width = width;\n    this.height = height;\n    this.canvas = canvas;\n    canvas.width = GRID_OFFSET*2 + SQUARE_SIDE*width;\n    canvas.height = GRID_OFFSET*2 + SQUARE_SIDE*height;\n    this.ctx = canvas.getContext(\"2d\");\n\n    // grid initialization\n    let row = [];\n    for (let k = 0; k < width; k++)\n      row.push(WALL);\n    this.grid = [];\n    for (let k = 0; k < height; k++)\n      this.grid.push(row.slice());\n\n    this.grid[0][0] = START;\n    this.grid[this.width-1][this.height-1] = FINISH;\n\n    // maze building initialization\n    this.mazeBuilderOn = true;\n    this.startMazeBuilderEvents();\n\n    // protecting callbacks\n    this.drawSquare = this.drawSquare.bind(this); // see if really need this at some point\n    this.solveBFS = this.solveBFS.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.solveMouse = this.solveMouse.bind(this);\n    this.solveManhattan = this.solveManhattan.bind(this);\n    this.rightMove = this.rightMove.bind(this);\n    this.solveRight = this.solveRight.bind(this);\n  }\n\n  // getters and setters\n\n  getValue(pos) {\n    return this.grid[pos[0]][pos[1]];\n  }\n\n  setValue(pos, value) {\n    this.grid[pos[0]][pos[1]] = value;\n  }\n\n  // draw entire maze\n  draw() {\n    this.ctx.fillStyle = \"grey\";\n    this.ctx.fillRect(0, 0, GRID_OFFSET * 2 + this.width * SQUARE_SIDE, GRID_OFFSET * 2 + this.height * SQUARE_SIDE);\n    for (let x = 0; x < this.width; x++) {\n      for (let y= 0; y < this.height; y++) {\n        this.drawSquare(x,y);\n      }\n    }\n  }\n\n  // draw individual square\n  drawSquare(x,y) {\n    let squareType = this.grid[x][y];\n    switch (squareType) {\n      case EMPTY:\n        this.ctx.fillStyle = \"white\";\n        break;\n      case WALL:\n        this.ctx.fillStyle = \"black\";\n        break;\n      case START:\n        this.ctx.fillStyle = \"green\";\n        break;\n      case FINISH:\n        this.ctx.fillStyle = \"red\";\n        break;\n      case VISITED:\n        this.ctx.fillStyle = \"green\";\n        break;\n      default:\n        console.log(\"Bad grid value...\" + squareType);\n    }\n    this.ctx.fillRect(GRID_OFFSET + x*SQUARE_SIDE + SQUARE_PADDING, GRID_OFFSET + y*SQUARE_SIDE + SQUARE_PADDING,\n      SQUARE_SIDE - 2*SQUARE_PADDING, SQUARE_SIDE - 2*SQUARE_PADDING );\n  }\n\n  // is mouse in mazeGrid\n  inGrid(x, y) {\n    return (x > GRID_OFFSET) && (y > GRID_OFFSET)\n      && (x < GRID_OFFSET + this.width*SQUARE_SIDE)\n      && (y < GRID_OFFSET + this.height*SQUARE_SIDE);\n  }\n\n  // convert mouse position into grid coordinates\n  convertToGrid(x, y) {\n    return [Math.floor((x-GRID_OFFSET)/SQUARE_SIDE),\n      Math.floor((y-GRID_OFFSET)/SQUARE_SIDE)\n    ];\n  }\n\n  // Flip a square between empty and wall\n  flip(x,y) {\n    if (this.grid[x][y] == this.flipTarget) {\n      this.grid[x][y] = this.grid[x][y] == WALL ? EMPTY : WALL\n      this.drawSquare(x,y);        \n    }\n  }\n\n  // Set up events for maze building\n  startMazeBuilderEvents() {\n    this.canvas.addEventListener('mousedown', e => {\n      if (this.mazeBuilderOn) {\n        if (this.inGrid(e.offsetX, e.offsetY)) {\n          let pos = this.convertToGrid(e.offsetX, e.offsetY);\n          let [x, y] = pos;\n          if (this.grid[x][y] == EMPTY || this.grid[x][y] == WALL) {\n            this.isBuilding = true;\n            this.flipTarget = this.grid[x][y];\n            this.flip(x,y);  \n          }\n        }\n      }\n    });\n  \n    this.canvas.addEventListener('mousemove', e => {\n      if (this.isBuilding) {\n        if (this.inGrid(e.offsetX, e.offsetY)) {\n          let [x, y] = this.convertToGrid(e.offsetX, e.offsetY)\n          this.flip(x, y);\n        }\n      }\n    });\n\n    this.canvas.addEventListener('mouseup', e => {\n      if (this.isBuilding) {\n        this.isBuilding = false;\n      }\n    });\n  }\n  \n  solveBFS() {\n    let start = this.getStart();     \n    let q = new Queue;\n    let numSquares = 0;\n    q.enqueque(start);\n    while (q.length() > 0) {\n      let square = q.dequeque();\n      if (this.grid[square[0]][square[1]] === VISITED)\n        continue;\n      if (this.grid[square[0]][square[1]] === FINISH) {\n        console.log(\"finished\");\n        break;\n      }\n\n      this.grid[square[0]][square[1]] = VISITED;\n      setTimeout(() => this.drawSquare(square[0], square[1]), 100*(numSquares + 1));\n      numSquares++;\n      \n      for (let d=0; d<4; d++) {\n        let neighborX = square[0] + DIRECTIONS[d][0];\n        let neighborY = square[1] + DIRECTIONS[d][1];\n        if (neighborX < 0 || neighborX >= this.width || neighborY < 0 || neighborY >= this.height)\n          continue;\n        if (this.grid[neighborX][neighborY] == EMPTY || this.grid[neighborX][neighborY] == FINISH)\n          q.enqueque([neighborX, neighborY]);\n      }\n    }\n  }\n\n  // locate start of maze\n  getStart() {\n    for (let x = 0; x < this.width; x++) {\n      for (let y = 0; y < this.height; y++) {\n        if (this.grid[x][y] == START)\n          return [x,y];\n      }\n    }\n    console.log(\"didn't find a start!\");\n  }\n\n  // locate end of maze\n  getFinish() {\n    for (let x = 0; x < this.width; x++) {\n      for (let y = 0; y < this.height; y++) {\n        if (this.grid[x][y] == FINISH)\n          return [x,y];\n      }\n    }\n    console.log(\"didn't find a finish!\");\n  }\n  \n  // Mouse algorithm\n  solveMouse() {\n    let currentSquare = this.getStart();     \n    let options = this.getDirectionOptions(currentSquare);\n\n    if (options.length == 0) {\n      console.log(\"game over man, game over\");\n      return;\n    }\n    \n    this.mouseMove(currentSquare, options[0]);\n  }\n\n  mouseMove(currentSquare, currentDirection) {\n  \n    if (this.getValue(currentSquare) == FINISH)\n      return;\n\n    let options = this.getDirectionOptions(currentSquare);\n    let newDirection = currentDirection;\n\n    if (options.length == 1)\n      newDirection = options[0];\n    \n    if (options.length == 2 && !options.includes(currentDirection)) {\n      options = options.filter((option) =>\n      option[0] != -1 * currentDirection[0] || option[1] != -1 * currentDirection[1]);\n      newDirection = options[0];\n    }\n\n    if (options.length >= 3) {\n      options = options.filter((option) =>\n        option[0] != -1 * currentDirection[0] || option[1] != -1 * currentDirection[1]);\n      newDirection = options[Math.floor(Math.random() * options.length)];\n    }\n\n    if (this.getValue(currentSquare) == VISITED) {\n      this.setValue(currentSquare, EMPTY);\n      this.drawSquare(currentSquare[0], currentSquare[1]);\n    }\n    \n    currentSquare[0] += newDirection[0];\n    currentSquare[1] += newDirection[1];\n    \n    if (this.getValue(currentSquare) == EMPTY) \n      this.setValue(currentSquare, VISITED);\n    this.drawSquare(currentSquare[0], currentSquare[1]);\n\n    setTimeout(() => this.mouseMove(currentSquare, newDirection), 100);\n  }\n\n  getDirectionOptions(square) {\n    let options = [];\n    for (let d=0; d<4; d++) {\n      if (this.acceptableDirection(square, DIRECTIONS[d]))\n        options.push(DIRECTIONS[d]);\n    }\n    return options;\n  }\n\n  acceptableDirection(square, direction) {\n    let neighborX = square[0] + direction[0];\n    let neighborY = square[1] + direction[1];\n    if (neighborX < 0 || neighborX >= this.width || neighborY < 0 || neighborY >= this.height)\n      return false;\n    if (this.grid[neighborX][neighborY] == WALL)\n      return false\n    return true;\n  }\n\n  manhattan(pos1, pos2) {\n    return Math.abs(pos1[0]-pos2[0]) + Math.abs(pos1[1]-pos2[1]);\n  }\n\n  solveManhattan() {\n    let finish = this.getFinish();\n    let start = this.getStart();\n    let q = new PriorityQueue((pos1, pos2) => {\n      let dist1 = this.manhattan(pos1, finish);\n      let dist2 = this.manhattan(pos2, finish);\n      if (dist1 < dist2)\n        return -1;\n      else if (dist1 > dist2)\n        return 1;\n      else\n        return 0;\n    });\n    let numSquares = 0;\n    q.add(start);  \n    while (q.length() > 0) {\n      let square = q.pop();\n      if (this.grid[square[0]][square[1]] === VISITED)\n        continue;\n      if (this.grid[square[0]][square[1]] === FINISH) {\n        console.log(\"finished\");\n        break;\n      }\n\n      this.grid[square[0]][square[1]] = VISITED;\n      setTimeout(() => this.drawSquare(square[0], square[1]), 100*(numSquares + 1));\n      numSquares++;\n      \n      for (let d=0; d<4; d++) {\n        let neighborX = square[0] + DIRECTIONS[d][0];\n        let neighborY = square[1] + DIRECTIONS[d][1];\n        if (neighborX < 0 || neighborX >= this.width || neighborY < 0 || neighborY >= this.height)\n          continue;\n        if (this.grid[neighborX][neighborY] == EMPTY || this.grid[neighborX][neighborY] == FINISH)\n          q.add([neighborX, neighborY]);\n      }\n    }\n  }\n\n  // Right algorithm routines\n\n  rightTurn(d) {\n    return (d+1)%4;\n  }\n\n  leftTurn(d) {\n    return (d+3)%4;\n  }\n\n  rightWallable(currentSquare, currentDirectionIndex) {\n    let right = this.rightTurn(currentDirectionIndex);\n    let forwardSquare = currentSquare.slice();\n    forwardSquare[0] += DIRECTIONS[right][0];\n    forwardSquare[1] += DIRECTIONS[right][1];\n    return forwardSquare[0] < 0 ||\n      forwardSquare[0] >= this.width ||\n      forwardSquare[1] < 0 ||\n      forwardSquare[1] >= this.height ||\n      this.getValue(forwardSquare) == WALL;\n  }\n\n  solveRight() {\n    let currentSquare = this.getStart();\n    let currentDirectionIndex = 0; \n\n    let options = this.getDirectionOptions(currentSquare);\n    if (options.length == 0) {\n      console.log(\"game over man, game over\");\n      return;\n    }\n\n    this.rightMove(currentSquare, currentDirectionIndex);\n  }\n\n  rightMove(currentSquare, currentDirectionIndex) {\n    if (this.getValue(currentSquare) == FINISH)\n      return;\n\n    if (this.rightWallable(currentSquare, currentDirectionIndex)) {\n      while (!this.acceptableDirection(currentSquare, DIRECTIONS[currentDirectionIndex]))\n        currentDirectionIndex = this.leftTurn(currentDirectionIndex);\n    } else\n      currentDirectionIndex = this.rightTurn(currentDirectionIndex);\n\n    if (this.getValue(currentSquare) == VISITED) {\n      this.setValue(currentSquare, EMPTY);\n      this.drawSquare(currentSquare[0], currentSquare[1]);\n    }\n\n    currentSquare[0] += DIRECTIONS[currentDirectionIndex][0];\n    currentSquare[1] += DIRECTIONS[currentDirectionIndex][1];\n \n    if (this.getValue(currentSquare) == EMPTY) \n      this.setValue(currentSquare, VISITED);\n    this.drawSquare(currentSquare[0], currentSquare[1]);\n    setTimeout(() => this.rightMove(currentSquare, currentDirectionIndex), 100);\n  }    \n}","import {Maze} from \"./maze\";\nimport { createButton, createElement, removeElement } from \"./util\";\n\n// modes for MazeController\n// all use this.maze\nconst CREATE_MAZE_MODE = 'CREATE_MAZE_MODE';\nconst DEFAULT_MAZE_MODE = \"DEFAULT_MAZE_MODE\";\nconst SOLVE_MAZE_MODE = \"SOLVE_MAZE_MODE\";\nconst SOLVED_MAZE_MODE = \"SOLVED_MAZE_MODE\";\n\nexport class MazeController {\n  constructor() {\n\n    // Set up main panels we'll need for mode control\n    createElement(\"frame_panel\", \"div\", \"maze_bar\", {className: \"nav_bar\"});\n    createButton(\"maze_bar\", \"create_maze_button\", \"Create Maze\", {callback: () => this.switchMode(CREATE_MAZE_MODE)});\n    createButton(\"maze_bar\", \"solve_maze_button\", \"Solve Maze\", {callback: () => this.switchMode(SOLVE_MAZE_MODE)});\n\n\n    // Initialize to pure create\n    this.startMode(CREATE_MAZE_MODE);\n\n    // Protect callbacks\n    this.switchMode = this.switchMode.bind(this);\n  }\n\n  // switch modes in maze_controller\n\n  switchMode(mode) {\n    if (mode === this.currentMode)\n      return;\n    this.stopMode(this.currentMode);\n    this.startMode(mode);\n  }\n\n\n\n  // start mode\n  startMode(mode) {\n    switch (mode) {\n      case CREATE_MAZE_MODE:\n        console.log(\"entering create_maze mode\")\n        if (this.canvas) {\n          removeElement(\"canvas\");\n        \n    }\n        createElement(\"frame_elements\", \"canvas\", \"canvas\");\n        this.canvas = document.getElementById(\"canvas\");\n        this.canvas.parentNode.insertBefore(this.canvas, document.getElementById(\"frame_panel\"))\n        this.maze = new Maze(30, 30, this.canvas);\n        this.maze.draw();\n        break;\n      case SOLVE_MAZE_MODE:\n        console.log(\"entering solve maze mode\");\n        createButton(\"frame_panel\", \"solve_bfs_button\", \"Solve with BFS\", {callback: this.maze.solveBFS});\n        createButton(\"frame_panel\", \"solve_mouse_button\", \"Solve with Mouse\", {callback: this.maze.solveMouse});      \n        createButton(\"frame_panel\", \"solve_manhattan_button\", \"Solve with Manhattan\", {callback: this.maze.solveManhattan});      \n        createButton(\"frame_panel\", \"solve_right_button\", \"Solve with Right\", {callback: this.maze.solveRight});      \n\n        break;\n    }\n    this.currentMode = mode;\n  }\n\n  // leave mode\n  stopMode(mode) {\n    switch (mode) {\n      case CREATE_MAZE_MODE:\n        console.log(\"leaving create_maze mode\");\n        this.maze.mazeBuilderOn = false;\n        break;\n      case SOLVE_MAZE_MODE:\n        console.log(\"leaving solve_maze mode\");\n        removeElement(\"solve_bfs_button\");\n        removeElement(\"solve_mouse_button\");\n        removeElement(\"solve_manhattan_button\");\n        removeElement(\"solve_right_button\");\n        break;\n    }\n  }\n  \n  // shut down whole component\n  stopFrame() {\n\n    removeElement(\"maze_bar\");\n\n  }\n}","// DOM utilities\n\n// export function createElement(parentId, element, id, className) {\n//   let parentElement = document.getElementById(parentId);\n//   let newElement = document.createElement(element);\n//   newElement.setAttribute(\"id\", id);  \n//   if (className)\n//     newElement.setAttribute(\"class\", className);\n//   parentElement.appendChild(newElement);\n// }\n\nexport function createElement(parentId, element, id, options = {}) {\n  let parentElement = document.getElementById(parentId);\n  let newElement = document.createElement(element);\n  newElement.setAttribute(\"id\", id);  \n  if (options.className)\n    newElement.setAttribute(\"class\", options.className);\n  if (options.callback)\n    newElement.onclick = options.callback;\n  parentElement.appendChild(newElement);\n  return newElement;\n}\n\nexport function createButton(parentId, buttonId, buttonText, options = {}) {\n  let newButton = createElement(parentId, \"BUTTON\", buttonId, options);\n  let text = document.createTextNode(buttonText);\n  newButton.appendChild(text);\n}\n\nexport function removeElement(id) {\n  let element = document.getElementById(id);\n  element.parentNode.removeChild(element);\n}\n\n// DSA utilities\n\nexport class Queue {\n  constructor () {\n    this.queueStart = 0\n    this.queueLength = 0\n    this.arr = [];\n  }\n\n  enqueque(q) {\n    this.arr.push(q);\n    this.queueLength++;\n  }\n\n  dequeque() {\n    this.queueLength--;\n    this.queueStart++;\n    return this.arr[this.queueStart-1];\n  }\n\n  length() {\n    return this.queueLength;\n  }\n}\n\nexport class PriorityQueue {\n constructor(cb) {\n   this.arr = [[-999, -999]]\n   this.cb = cb;\n }\n\nlength() {\n   return this.arr.length-1;\n}\n\nlastIndex() {\n  return this.length();\n}\n\nadd(element) {\n  this.arr.push(element);\n  this.swim(this.lastIndex());\n}\n\nswim(index) {\n  while (Math.floor(index/2) > 0 && this.cb(this.arr[Math.floor(index/2)], this.arr[index]) == 1) {\n    this.swap(Math.floor(index/2), index);\n    index = Math.floor(index/2);\n  }\n}\n \npop() {\n  if (this.length() == 0)\n    return;\n  let retElement = this.arr[1];\n  let index = 1;\n  while (2*index <= this.lastIndex()) {\n    let left = 2*index;\n    let right = 2*index+1;\n    if (right <= this.lastIndex() && this.cb(this.arr[right], this.arr[left]) == -1) {\n      this.arr[index] = this.arr[right];\n      index = right;\n    } else {\n      this.arr[index] = this.arr[left];\n      index = left;\n    }\n  }\n  if (index != this.lastIndex()) {\n    this.swap(index, this.lastIndex());\n    this.swim(index);\n  }\n  this.arr.pop();\n  return retElement;\n} \n\n  swap(a, b) {\n  let temp = this.arr[a];\n  this.arr[a] = this.arr[b];\n  this.arr[b] = temp;\n  }\n}\n\nexport function deepDup(arr) {\n  if (!(arr instanceof Array))\n    return arr\n  return arr.map(ele => deepDup(ele));\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./js/main.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}